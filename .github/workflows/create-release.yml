name: Gerar Release Manual

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Informe uma tag existente (ex: 1.2.3)'
        required: true
        type: string

permissions:
  contents: write
  actions: write

jobs:
  manual-release:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout completo do reposit√≥rio
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Precisamos de todo o hist√≥rico para verificar commits e tags

      - name: Buscar tags e validar se a tag existe
        run: |
          git fetch --tags
          if ! git rev-parse "refs/tags/${{ inputs.tag_name }}" >/dev/null 2>&1; then
            echo "‚ùå Tag '${{ inputs.tag_name }}' n√£o existe."
            exit 1
          fi
          echo "‚úÖ Tag '${{ inputs.tag_name }}' encontrada."

      - name: Verificar se a tag est√° no √∫ltimo commit da main
        id: check_main
        run: |
          git fetch origin main
          tag_commit=$(git rev-parse refs/tags/${{ inputs.tag_name }})
          main_commit=$(git rev-parse origin/main)

          echo "Commit da tag: $tag_commit"
          echo "Commit atual da main: $main_commit"

          if [ "$tag_commit" = "$main_commit" ]; then
            echo "is_main=true" >> $GITHUB_ENV
            echo "‚úÖ Tag est√° no √∫ltimo commit da main."
          else
            echo "is_main=false" >> $GITHUB_ENV
            echo "üõë A tag n√£o est√° no HEAD da main. Encerrando release."
          fi

      - name: Criar release com notas autom√°ticas
        if: env.is_main == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -X POST -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/releases \
            -d '{
              "tag_name": "'"${{ inputs.tag_name }}"'",
              "name": "Release '"${{ inputs.tag_name }}"'",
              "draft": false,
              "prerelease": false,
              "generate_release_notes": true
            }'

      - name: Log de sa√≠da se tag n√£o for da main
        if: env.is_main == 'false'
        run: |
          echo "‚ùå Nenhum release foi gerado. A tag informada n√£o est√° no √∫ltimo commit da main."
